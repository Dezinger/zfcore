<project name="ZFCore" default="build">
    <target name="clean">
        <delete dir="${basedir}/build"/>
    </target>
    <target name="prepare">
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/logs/clover"/>
        <mkdir dir="${basedir}/build/docs"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/phpcb"/>
        <mkdir dir="${basedir}/build/pdepend"/>

        <!--Requirements-->
        <mkdir dir="${basedir}/data/cache/"/>
        <mkdir dir="${basedir}/data/logs/"/>
        <mkdir dir="${basedir}/data/session/"/>
        <mkdir dir="${basedir}/data/uploads/"/>
        <mkdir dir="${basedir}/public/images/captcha/"/>
        <mkdir dir="${basedir}/public/uploads/"/>
        
        <!--Configuration-->
        <move file="${basedir}/application/configs/application.sample.yaml" todir="${basedir}/application/configs/application.yaml" />
    </target>
    <!--<target name="phpdoc">
        <exec dir="${basedir}" executable="phpdoc" failonerror="false">
            <arg line="-t build/docs
                  - -directory '${basedir}/application,${basedir}/library/Core'
                  -ti 'ZFCore Docs'
                  - -parseprivate on
                  - -undocumentedelements on
                  - -output HTML:Smarty:PHP
                  - -ignore '*.phtml'
                  - -sourcecode on"/>
        </exec>
    </target>-->
    <target name="phploc">
        <exec dir="${basedir}" executable="phploc">
            <arg line="--log-csv ${basedir}/build/logs/phploc.csv" />
            <arg line="." />
        </exec>
    </target>
    <target name="phpcpd">
        <exec dir="${basedir}" executable="phpcpd" failonerror="false">
            <arg line="--log-pmd build/logs/phpcpd.xml
                  --exclude bin
                  --exclude migrations
                  --exclude public
                   ."/>
        </exec>
    </target>
    <target name="phpmd">
        <exec dir="${basedir}" executable="phpmd" failonerror="false">
            <arg line=". xml codesize,unusedcode,naming --reportfile '${basedir}/build/logs/pmd.xml' --exclude 'bin,migrations,public'"/>
        </exec>
    </target>
    <target name="pdepend" description="Generate jdepend.xml and software metrics charts using PHP_Depend">
        <exec dir="${basedir}" executable="pdepend" failonerror="true">
        <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
        <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg line="--ignore=bin,migrations,public"/>
            <arg line="."/>
        </exec>
    </target>

    <target name="phpcs">
        <exec dir="${basedir}" executable="phpcs" output="${basedir}/build/logs/checkstyle.xml" failonerror="false">
            <arg line="--report=checkstyle --extensions=php --ignore=bin,migrations,public --standard=Zend ."/>
        </exec>
    </target>
    <target name="phpunit">
        <exec dir="${basedir}/tests" executable="phpunit" failonerror="false">
            <arg line="--configuration phpunit.xml --log-junit ${basedir}/build/logs/junit.xml --coverage-clover ${basedir}/build/logs/clover.xml --coverage-html ${basedir}/build/logs/clover/ ."/>
        </exec>
    </target>
    <target name="phpcb" depends="phpcpd, phpmd, phpcs">
        <exec executable="phpcb">
            <arg line="--log ${basedir}/build/logs
                --output ${basedir}/build/phpcb" />
        </exec>
    </target>
    <target name="build" depends="clean, prepare, phploc, phpmd, phpcs, phpcpd, pdepend, phpcb, phpunit"/>

    <target name="update-source">
        <exec dir="${basedir}" executable="hg">
            <arg line="pull" />
        </exec>
        <exec dir="${basedir}" executable="hg">
            <arg line="update" />
        </exec>
    </target>

    <target name="clean-db">
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="down migration blog" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="down migration faq" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="down migration feedback" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="down migration forum" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="down migration menu" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="down migration pages" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="down migration users" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="down migration" />
        </exec>
    </target>

    <target name="recreate-db" depends="clean-db">
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="up migration" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="up migration blog" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="up migration faq" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="up migration feedback" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="up migration forum" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="up migration menu" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="up migration pages" />
        </exec>
        <exec dir="${basedir}/bin" executable="./zfc.sh">
            <arg line="up migration users" />
        </exec>
    </target>

    <target name="load-test-data" depends="recreate-db">
        <!-- Add here any test data (may be provided with custom migrations) -->
    </target>

    <target name="show-maintanance-page">
        
        <copy file="${basedir}/public/robots.txt"
              tofile="${basedir}/public/original-robots.txt"
              overwrite="true" failonerror="false" />

        <copy file="${basedir}/public/maintenance-robots.txt"
              tofile="${basedir}/public/robots.txt"
              overwrite="true" />

        <copy file="${basedir}/public/.htaccess"
              tofile="${basedir}/public/original.htaccess" 
              overwrite="true" />

        <copy file="${basedir}/public/maintenance.htaccess"
              tofile="${basedir}/public/.htaccess" 
              overwrite="true" />

    </target>

    <target name="remove-maintanance-page">

        <copy file="${basedir}/public/original.htaccess" 
              tofile="${basedir}/public/.htaccess"
              overwrite="true" />

        <copy file="${basedir}/public/original-robots.txt" 
              tofile="${basedir}/public/robots.txt"
              overwrite="true" failonerror="false" />
              
    </target>

    <target name="reset-demo" depends="show-maintanance-page,update-source,load-test-data,remove-maintanance-page"/>

</project>
